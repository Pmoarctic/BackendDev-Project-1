@startuml AuthAPI

skinparam {
    defaultFontName Arial
    defaultFontSize 14
    shadowing true
    componentStyle uml2
    MinClassWidth 150
    ParticipantPadding 50
    ArrowThickness 1.5
}

actor "**User**" as User
participant "**Auth Router**" as AR   #98FB98
participant "**Auth Middleware**" as AM   #FF6347
participant "**Auth Controller**" as AC #FFD700
participant "**User Model**" as UM       #87CEEB
database "**MongoDB: Users**" as DB #C0C0C0

== Register ==
User -> AR : **POST /api/v1/auth/register**
activate AR #98FB98
AR -> AC : **register()**
activate AC #FFD700
AC -> UM : **User.create(req.body)**
activate UM #87CEEB
UM -> DB : **Insert new user**
activate DB #C0C0C0
DB --> UM : **new user**
deactivate DB
UM --> AC : **new user**
deactivate UM
deactivate AR
AC --> User : **201 Created (JWT Token)**
deactivate AC

' AR --> User : **201 Created (JWT Token)**


== Login ==
User -> AR : **POST /api/v1/auth/login**
activate AR #98FB98
AR -> AC : **login()**
activate AC #FFD700
AC -> UM : **User.findOne({ email })**
activate UM #87CEEB
UM -> DB : **Find user by email**
activate DB #C0C0C0
DB --> UM : **user**
deactivate DB
UM --> AC : **user**
deactivate UM
AC -> UM : **matchPassword(enteredPassword)**
activate UM #87CEEB
UM --> AC : **true/false**
deactivate UM
deactivate AR
AC --> User : **200 OK (JWT Token) / 401 Unauthorized**
deactivate AC


== Get Me ==
User -> AR : **GET /api/v1/auth/me**
activate AR #98FB98
AR -> AC : **getMe()**
activate AC #FFD700
AC -> UM : **User.findById(req.user.id)**
activate UM #87CEEB
UM -> DB : **Find user by ID**
activate DB #C0C0C0
DB --> UM : **user**
deactivate DB
UM --> AC : **user**
deactivate UM
deactivate AR
AC --> User : **200 OK**
deactivate AC


== Logout ==
User -> AR : **GET /api/v1/auth/logout**
activate AR #98FB98
AR -> AC : **logout()**
activate AC #FFD700
deactivate AR
AC --> User : **200 OK (Cookie Cleared)**
deactivate AC


@enduml
